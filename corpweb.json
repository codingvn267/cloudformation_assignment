{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "CloudFormation Template to Create EC2 Instances Behind an ALB with Internet Gateway",

  "Parameters": {
    "InstanceType": {
      "Type": "String",
      "Description": "EC2 Instance Type",
      "AllowedValues": ["t2.micro", "t2.small"],
      "Default": "t2.micro"
    },
    "KeyPair": {
      "Type": "AWS::EC2::KeyPair::KeyName",
      "Description": "Key pair for SSH access to EC2 instances"
    },
    "YourIp": {
      "Type": "String",
      "Description": "Your IP address in CIDR notation"
    }
  },

  "Resources": {
    "EngineeringVpc": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "10.0.0.0/18",
        "EnableDnsSupport": "true",
        "EnableDnsHostnames": "true",
        "Tags": [{"Key": "Name", "Value": "EngineeringVpc"}]
      }
    },
    "PublicSubnet1": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {"Ref": "EngineeringVpc"},
        "CidrBlock": "10.0.0.0/24",
        "MapPublicIpOnLaunch": "true",
        "AvailabilityZone": "us-east-1a",
        "Tags": [{"Key": "Name", "Value": "PublicSubnet1"}]
      }
    },
    "PublicSubnet2": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {"Ref": "EngineeringVpc"},
        "CidrBlock": "10.0.1.0/24",
        "MapPublicIpOnLaunch": "true",
        "AvailabilityZone": "us-east-1b",
        "Tags": [{"Key": "Name", "Value": "PublicSubnet2"}]
      }
    },

    "InternetGateway": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [{"Key": "Name", "Value": "EngineeringInternetGateway"}]
      }
    },
    "AttachGateway": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {"Ref": "EngineeringVpc"},
        "InternetGatewayId": {"Ref": "InternetGateway"}
      }
    },
    "PublicRouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {"Ref": "EngineeringVpc"},
        "Tags": [{"Key": "Name", "Value": "PublicRouteTable"}]
      }
    },
    "PublicRoute": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {"Ref": "PublicRouteTable"},
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {"Ref": "InternetGateway"}
      }
    },
    "PublicSubnet1RouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": {"Ref": "PublicSubnet1"},
        "RouteTableId": {"Ref": "PublicRouteTable"}
      }
    },
    "PublicSubnet2RouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": {"Ref": "PublicSubnet2"},
        "RouteTableId": {"Ref": "PublicRouteTable"}
      }
    },

    "WebserversSG": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Allow HTTP and SSH",
        "VpcId": {"Ref": "EngineeringVpc"},
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "22",
            "ToPort": "22",
            "CidrIp": {"Ref": "YourIp"}
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "80",
            "ToPort": "80",
            "CidrIp": "0.0.0.0/0"
          }
        ],
        "Tags": [{"Key": "Name", "Value": "WebserversSG"}]
      }
    },

    "web1": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "InstanceType": {"Ref": "InstanceType"},
        "KeyName": {"Ref": "KeyPair"},
        "SubnetId": {"Ref": "PublicSubnet1"},
        "ImageId": "ami-01cc34ab2709337aa",
        "SecurityGroupIds": [{"Ref": "WebserversSG"}],
        "Tags": [{"Key": "Name", "Value": "web1"}],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash\n",
                "yum update -y\n",
                "yum install -y git httpd php\n",
                "service httpd start\n",
                "chkconfig httpd on\n",
                "aws s3 cp s3://seis665-public/index.php /var/www/html/\n"
              ]
            ]
          }
        }
      }
    },
    "web2": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "InstanceType": {"Ref": "InstanceType"},
        "KeyName": {"Ref": "KeyPair"},
        "SubnetId": {"Ref": "PublicSubnet2"},
        "ImageId": "ami-01cc34ab2709337aa",
        "SecurityGroupIds": [{"Ref": "WebserversSG"}],
        "Tags": [{"Key": "Name", "Value": "web2"}],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash\n",
                "yum update -y\n",
                "yum install -y git httpd php\n",
                "service httpd start\n",
                "chkconfig httpd on\n",
                "aws s3 cp s3://seis665-public/index.php /var/www/html/\n"
              ]
            ]
          }
        }
      }
    },

    "EngineeringLB": {
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
      "Properties": {
        "Subnets": [
          {"Ref": "PublicSubnet1"},
          {"Ref": "PublicSubnet2"}
        ],
        "SecurityGroups": [{"Ref": "WebserversSG"}],
        "Scheme": "internet-facing"
      }
    },
    "EngineeringWebservers": {
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
      "Properties": {
        "Port": 80,
        "Protocol": "HTTP",
        "VpcId": {"Ref": "EngineeringVpc"},
        "TargetType": "instance",
        "HealthCheckPath": "/",
        "Targets": [
          {"Id": {"Ref": "web1"}},
          {"Id": {"Ref": "web2"}}
        ]
      }
    }
  },

  "Outputs": {
    "WebUrl": {
      "Description": "The URL of the load balancer",
      "Value": {"Fn::GetAtt": ["EngineeringLB", "DNSName"]}
    }
  }
}